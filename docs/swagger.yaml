definitions:
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductAdminRow:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      status:
        type: integer
      totalCount:
        type: integer
      type:
        items:
          type: integer
        type: array
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductLikeRow:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      create_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      likedBy:
        items:
          type: integer
        type: array
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      sold:
        type: integer
      status:
        type: integer
      totalCount:
        type: integer
      totalLikes:
        type: integer
      type:
        type: integer
      uniqueViews:
        items:
          type: integer
        type: array
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductPublicRow:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      create_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      likedBy:
        items:
          type: integer
        type: array
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      sold:
        type: integer
      status:
        type: integer
      totalCount:
        type: integer
      totalLikes:
        type: integer
      type:
        type: integer
      uniqueViews:
        items:
          type: integer
        type: array
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductRelatedRow:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      create_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      likedBy:
        items:
          type: integer
        type: array
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      sold:
        type: integer
      status:
        type: integer
      totalCount:
        type: integer
      totalLikes:
        type: integer
      type:
        type: integer
      uniqueViews:
        items:
          type: integer
        type: array
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductViewRow:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      create_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      likedBy:
        items:
          type: integer
        type: array
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      sold:
        type: integer
      status:
        type: integer
      totalCount:
        type: integer
      totalLikes:
        type: integer
      type:
        type: integer
      uniqueViews:
        items:
          type: integer
        type: array
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.UsersStatus:
    enum:
    - "0"
    - "1"
    type: string
    x-enum-varnames:
    - UsersStatus0
    - UsersStatus1
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ChangePasswordRequest:
    properties:
      currentPassword:
        minLength: 6
        type: string
      newPassword:
        minLength: 6
        type: string
    required:
    - currentPassword
    - newPassword
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateCity:
    properties:
      name:
        minLength: 6
        type: string
    required:
    - name
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateDelivery:
    properties:
      name:
        type: string
      price:
        minimum: 1
        type: integer
    required:
    - name
    - price
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateProduct:
    properties:
      countInStock:
        type: integer
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        example: '[{"value": "null or time"}]'
        type: string
      discountStart:
        example: '[{"value": "null or time"}]'
        type: string
      image:
        type: string
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      status:
        type: integer
      type:
        type: integer
    required:
    - countInStock
    - description
    - image
    - location
    - name
    - price
    - slug
    - status
    - type
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateProductType:
    properties:
      name:
        minLength: 4
        type: string
      slug:
        minLength: 1
        type: string
    required:
    - name
    - slug
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateRole:
    properties:
      name:
        minLength: 6
        type: string
    required:
    - name
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyCity:
    properties:
      arrayId:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - arrayId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyDelivery:
    properties:
      arrayId:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - arrayId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyProduct:
    properties:
      arrayId:
        items:
          type: integer
        type: array
    required:
    - arrayId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyProductType:
    properties:
      productTypeIds:
        items:
          type: integer
        type: array
    required:
    - productTypeIds
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyRole:
    properties:
      arrayId:
        items:
          type: integer
        type: array
    required:
    - arrayId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateCity:
    properties:
      name:
        minLength: 1
        type: string
    required:
    - name
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateDelivery:
    properties:
      name:
        minLength: 1
        type: string
      price:
        minimum: 1
        type: integer
    required:
    - name
    - price
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateProductType:
    properties:
      name:
        type: string
      slug:
        type: string
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateRole:
    properties:
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.LikeProduct:
    properties:
      productId:
        type: integer
    required:
    - productId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ResetPasswordRequest:
    properties:
      newPassword:
        minLength: 6
        type: string
      secretKey:
        type: string
    required:
    - newPassword
    - secretKey
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UnLikeProduct:
    properties:
      productId:
        type: integer
    required:
    - productId
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UpdateAuthMe:
    properties:
      address:
        type: string
      avatar:
        type: string
      city:
        format: int64
        type: integer
      firstName:
        type: string
      image:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      phoneNumber:
        format: string
        type: string
    required:
    - address
    - avatar
    - city
    - firstName
    - lastName
    - middleName
    - phoneNumber
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UpdateProduct:
    properties:
      countInStock:
        type: integer
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        example: '[{"value": "null or time"}]'
        type: string
      discountStart:
        example: '[{"value": "null or time"}]'
        type: string
      image:
        type: string
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      status:
        type: integer
      type:
        type: integer
    required:
    - countInStock
    - description
    - image
    - location
    - name
    - price
    - slug
    - status
    - type
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.AuthMe:
    properties:
      _id:
        type: integer
      address:
        type: string
      addresses:
        items:
          type: integer
        type: array
      avatar:
        type: string
      city:
        type: integer
      create_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      phoneNumber:
        type: string
      role:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
      status:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.UsersStatus'
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.City:
    properties:
      _id:
        type: integer
      create_at:
        type: string
      name:
        type: string
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Delivery:
    properties:
      _id:
        type: integer
      create_at:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAccessToken:
    properties:
      access_token:
        type: string
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllMeLiked:
    properties:
      products:
        items:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductLikeRow'
        type: array
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllMeViewed:
    properties:
      products:
        items:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductViewRow'
        type: array
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductAdmin:
    properties:
      products:
        items:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductAdminRow'
        type: array
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductPublic:
    properties:
      products:
        items:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductPublicRow'
        type: array
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductRelated:
    properties:
      products:
        items:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.GetAllProductRelatedRow'
        type: array
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Login:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.User'
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Product:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      likedBy:
        items:
          type: integer
        type: array
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      status:
        type: integer
      totalLikes:
        type: integer
      type:
        type: integer
      uniqueViews:
        items:
          type: integer
        type: array
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.ProductType:
    properties:
      _id:
        type: integer
      create_at:
        type: string
      name:
        type: string
      slug:
        type: string
      update_at:
        type: string
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role:
    properties:
      _id:
        type: integer
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.UpdateAuthMe:
    properties:
      _id:
        type: integer
      address:
        type: string
      addresses:
        items:
          type: integer
        type: array
      avatar:
        type: string
      city:
        type: integer
      create_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      phoneNumber:
        type: integer
      role:
        type: integer
      status:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.UsersStatus'
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.UpdateProduct:
    properties:
      _id:
        type: integer
      countInStock:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      discount:
        type: integer
      discountEndDate:
        type: string
      discountStartDate:
        type: string
      image:
        type: string
      location:
        type: integer
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
      status:
        type: integer
      type:
        type: integer
      views:
        type: integer
    type: object
  github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.User:
    properties:
      _id:
        type: integer
      address:
        type: string
      addresses:
        items:
          type: integer
        type: array
      avatar:
        type: string
      city:
        type: integer
      create_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      likeProducts:
        items:
          type: integer
        type: array
      middleName:
        type: string
      phoneNumber:
        type: string
      resetToken:
        type: string
      resetTokenExpiration:
        type: string
      role:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
      status:
        $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_db_sqlc.UsersStatus'
      viewedProducts:
        items:
          type: integer
        type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: nghiabeo1605@gmail.com
    name: Nguyễn Đại Nghĩa
    url: https://www.facebook.com/shy.leopard.beo
  description: This is a server ecommerce.
  title: Swagger Golang Ecommerce
paths:
  /api/auth/change-password:
    patch:
      description: ChangePassword account
      parameters:
      - description: ChangePassword user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Change password success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: ChangePassword accounts
      tags:
      - Auth
  /api/auth/forgot-password:
    post:
      description: ForgotPassword account
      parameters:
      - description: ForgotPassword user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Forgot password success
          schema:
            type: string
      summary: ForgotPassword accounts
      tags:
      - Auth
  /api/auth/login:
    post:
      description: Login account
      parameters:
      - description: Login user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Login'
      summary: Login accounts
      tags:
      - Auth
  /api/auth/logout:
    post:
      description: Logout account
      produces:
      - application/json
      responses:
        "200":
          description: Logout success
          schema:
            type: string
      summary: Logout accounts
      tags:
      - Auth
  /api/auth/me:
    get:
      description: get me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.AuthMe'
      security:
      - BearerAuth: []
      summary: get me
      tags:
      - Auth
    put:
      description: Update me
      parameters:
      - description: Update auth me
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UpdateAuthMe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.UpdateAuthMe'
      security:
      - BearerAuth: []
      summary: Update me
      tags:
      - Auth
  /api/auth/refresh-token:
    post:
      description: RefreshToken account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAccessToken'
      security:
      - BearerAuth: []
      summary: RefreshToken accounts
      tags:
      - Auth
  /api/auth/register:
    post:
      description: Register account
      parameters:
      - description: Register user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Register success
          schema:
            type: string
      summary: Register accounts
      tags:
      - Auth
  /api/auth/reset-password:
    post:
      description: ResetPassword account
      parameters:
      - description: ResetPassword user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Reset password success
          schema:
            type: string
      summary: ResetPassword accounts
      tags:
      - Auth
  /api/city:
    get:
      description: Get all city
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.City'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all city
      tags:
      - City
    post:
      description: Create city
      parameters:
      - description: Create city
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateCity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.City'
      security:
      - BearerAuth: []
      summary: Create city
      tags:
      - City
  /api/city/{cityId}:
    delete:
      description: Delete city
      parameters:
      - description: Delete city
        in: path
        name: cityId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete city
      tags:
      - City
    get:
      description: Get city by id
      parameters:
      - description: User ID
        in: path
        name: cityId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.City'
      security:
      - BearerAuth: []
      summary: Get city by id
      tags:
      - City
    put:
      description: Update city
      parameters:
      - description: Update city
        in: path
        name: cityId
        required: true
        type: integer
      - description: Update city
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateCity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.City'
      security:
      - BearerAuth: []
      summary: Update city
      tags:
      - City
  /api/city/delete-many:
    delete:
      description: Delete many city
      parameters:
      - description: DeleteMany city
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyCity'
      produces:
      - application/json
      responses:
        "200":
          description: Delete many city success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete many city
      tags:
      - City
  /api/delivery-type:
    get:
      description: Get all Delivery
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Delivery'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all Delivery
      tags:
      - Delivery
    post:
      description: Create Delivery
      parameters:
      - description: Create Delivery
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateDelivery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Delivery'
      security:
      - BearerAuth: []
      summary: Create Delivery
      tags:
      - Delivery
  /api/delivery-type/{DeliveryId}:
    delete:
      description: Delete Delivery
      parameters:
      - description: Delete Delivery
        in: path
        name: DeliveryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Delivery
      tags:
      - Delivery
    get:
      description: Get Delivery by id
      parameters:
      - description: User ID
        in: path
        name: DeliveryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Delivery'
      security:
      - BearerAuth: []
      summary: Get Delivery by id
      tags:
      - Delivery
    put:
      description: Update Delivery
      parameters:
      - description: Update Delivery
        in: path
        name: DeliveryId
        required: true
        type: integer
      - description: Update Delivery
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateDelivery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Delivery'
      security:
      - BearerAuth: []
      summary: Update Delivery
      tags:
      - Delivery
  /api/delivery-type/delete-many:
    delete:
      description: Delete many Delivery
      parameters:
      - description: DeleteMany Delivery
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyDelivery'
      produces:
      - application/json
      responses:
        "200":
          description: Delete many Delivery success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete many Delivery
      tags:
      - Delivery
  /api/product-types:
    get:
      description: Get all ProductType
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.ProductType'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all ProductType
      tags:
      - ProductType
    post:
      description: Create ProductType
      parameters:
      - description: Create ProductType
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateProductType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.ProductType'
      security:
      - BearerAuth: []
      summary: Create ProductType
      tags:
      - ProductType
  /api/product-types/{ProductTypeId}:
    delete:
      description: Delete ProductType
      parameters:
      - description: Delete ProductType
        in: path
        name: ProductTypeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete ProductType
      tags:
      - ProductType
    get:
      description: Get ProductType by id
      parameters:
      - description: User ID
        in: path
        name: ProductTypeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.ProductType'
      security:
      - BearerAuth: []
      summary: Get ProductType by id
      tags:
      - ProductType
    put:
      description: Update ProductType
      parameters:
      - description: Update ProductType
        in: path
        name: ProductTypeId
        required: true
        type: integer
      - description: Update ProductType
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateProductType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.ProductType'
      security:
      - BearerAuth: []
      summary: Update ProductType
      tags:
      - ProductType
  /api/product-types/delete-many:
    delete:
      description: Delete many ProductType
      parameters:
      - description: DeleteMany ProductType
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyProductType'
      produces:
      - application/json
      responses:
        "200":
          description: Delete many ProductType success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete many ProductType
      tags:
      - ProductType
  /api/products:
    get:
      description: Get all Product
      parameters:
      - in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        name: productType
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductAdmin'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all Product
      tags:
      - Product
    post:
      description: Create Product
      parameters:
      - description: Create Product
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Product'
      security:
      - BearerAuth: []
      summary: Create Product
      tags:
      - Product
  /api/products/{productId}:
    delete:
      description: Delete Product
      parameters:
      - description: Delete Product
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      description: Get Product by id
      parameters:
      - description: product ID
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllMeViewed'
      security:
      - BearerAuth: []
      summary: Get Product by id
      tags:
      - Product
    put:
      description: Update Product
      parameters:
      - description: Update Product
        in: path
        name: productId
        required: true
        type: integer
      - description: Update Product
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.UpdateProduct'
      security:
      - BearerAuth: []
      summary: Update Product
      tags:
      - Product
  /api/products/delete-many:
    delete:
      description: Delete many Product
      parameters:
      - description: DeleteMany Product
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Delete many Product success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete many Product
      tags:
      - Product
  /api/products/like:
    post:
      description: Like product
      parameters:
      - description: like product
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.LikeProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Like product success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Like product
      tags:
      - Product
  /api/products/liked/me:
    get:
      description: Get all Product
      parameters:
      - in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Product'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all Product
      tags:
      - Product
  /api/products/public:
    get:
      description: Get all Product
      parameters:
      - in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        name: productType
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductPublic'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all Product
      tags:
      - Product
  /api/products/public/{productId}:
    get:
      description: Get Product public by id
      parameters:
      - description: product ID
        in: path
        name: productId
        required: true
        type: integer
      - in: query
        name: isViewed
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Product'
      security:
      - BearerAuth: []
      summary: Get Product public by id
      tags:
      - Product
  /api/products/public/slug/{productSlug}:
    get:
      description: Get Product by slug
      parameters:
      - description: product slug
        in: path
        name: productSlug
        required: true
        type: string
      - in: query
        name: isViewed
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Product'
      security:
      - BearerAuth: []
      summary: Get Product by slug
      tags:
      - Product
  /api/products/related:
    get:
      description: Get product related
      parameters:
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllProductRelated'
      security:
      - BearerAuth: []
      summary: Get product related
      tags:
      - Product
  /api/products/unlike:
    post:
      description: Unlike product
      parameters:
      - description: unlike product
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.UnLikeProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Unlike product success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Unlike product
      tags:
      - Product
  /api/products/viewed/me:
    get:
      description: Get all Product me viewed
      parameters:
      - in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.GetAllMeLiked'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all Product me viewed
      tags:
      - Product
  /api/roles:
    get:
      description: Get all role
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
              type: array
            type: array
      security:
      - BearerAuth: []
      summary: Get all role
      tags:
      - Role
    post:
      description: Create role
      parameters:
      - description: Create Role
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.CreateRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - Role
  /api/roles/{roleId}:
    delete:
      description: Delete Role
      parameters:
      - description: Delete Role
        in: path
        name: RoleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Role
      tags:
      - Role
    get:
      description: Get role by id
      parameters:
      - description: User ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
      security:
      - BearerAuth: []
      summary: Get role by id
      tags:
      - Role
    put:
      description: Update role
      parameters:
      - description: Update Role
        in: path
        name: roleId
        required: true
        type: integer
      - description: Update Role
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.GetBodyUpdateRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_response.Role'
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - Role
  /api/roles/delete-many:
    delete:
      description: Delete many role
      parameters:
      - description: DeleteMany Role
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/github_com_NghiaLeopard_Go-Ecommerce-Backend_internal_api_handler_request.DeleteManyRole'
      produces:
      - application/json
      responses:
        "200":
          description: Delete many Role success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete many role
      tags:
      - Role
securityDefinitions:
  BearerAuth:
    description: 'Add prefix of Bearer before  token Ex: "Bearer token"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
